version: "3.7"

networks:
  mempool:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}
    
services:
  prometheus:
    image: prom/prometheus:v2.29.2
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - mempool
    labels:
      org.label-schema.group: "monitoring"
      
  grafana:
    image: grafana/grafana:9.1.7
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - 3000:3000
    container_name: grafana
    networks:
      - mempool
    labels:
      org.label-schema.group: "monitoring"
      
  origin:
      container_name: origin
      image: manifoldfinance/capacity
      command: /bin/origin -worker=${ORIGIN_WORKER} -worktime=${ORIGIN_WORKTIME} -queue=${ORIGIN_QUEUE}
      environment:
          - COLLECT_PEER_INFO=true
          - COLLECT_PENDING_TX=true
          - ETH_RPC_URL=http://172.25.0.104:8545
          - ORIGIN_WORKER=7
          - ORIGIN_WORKTIME=1s
          - ORIGIN_QUEUE=100
      networks:
        - mempool

  client:
      container_name: client
      image: manifoldfinance/capacity
      depends_on:
        - origin
        - proxy
      command: /bin/client -worker=${CLIENT_WORKER} -rps=${CLIENT_RPS} -origin=${CLIENT_ORIGIN}
      environment:
          - CLIENT_WORKER=10
          - CLIENT_ORIGIN=http://origin:8000
          - CLIENT_RPS=5
          - IS_TEST=dev
      networks:
        - mempool

  proxy:
      container_name: proxy
      image: manifoldfinance/capacity
      depends_on:
        - origin
      command: /bin/proxy -quota=${PROXY_QUOTA} -adaptive=${PROXY_ADAPTIVE} -origin=http://origin:8000
      environment:
        - GOMAXPROCS=4
        - PROXY_QUOTA=5
        - PROXY_ADAPTIVE=false
      ports:
        - 7000:7000
      networks:
        - mempool
